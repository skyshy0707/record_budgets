# параметры для записи данных в БД пользователя:
[record_params]
# модель, относящаяся к целевому серверу пользователя, которая 
# представляет таблицу данных, загружаемых с внеш. api:
model=budget.Budget
# поля в модели, заданной в model для сериализации:
serialize_fields=status, code, name, startdate, enddate, parentcode, budgettype
# поля для переименовывания их имён в данных, полученных от внеш. api: 
# ключи --- в данных, значения --- в модели model, которые сервер
# пользователя переименует для передачи их на след. этап обработки:
renaming_fields={"budgtypecode": "budgettype"}
# поля в модели model, которые требуется заполнять значением отличным от 
# значения в данных, полученных от внеш. сервера, найденных по тому же ключу
# ключ --- указывает на имя поля в модели model,
# значение --- порядок заполнения такого поля:
# 'map' --- указатель на модель, реализованную на целевом сервере пользователя
# и поле, по которому следует выбрать её экземпляр, значение поля находится в
# данных по ключу (см. выше описание ключа refilling fields)
# 'fill' --- поле в выбранном экземпляре модели, найденной по 'map', значение
# которого требуется извлечь для перезаполнения поля в модели model
refilling_fields={"parentcode": {"map": "budget.Budget.code", "fill": "id"}}
# метод записи данных, поступающих от внеш. сервера в пользовательскую бд:
# create --- созд. новые строки данных, update --- модификация данных
record_method=create

# параметры внешнего api (источник получения данных):
[external_api_params]
# url-адрес внеш. api:
base_url=http://budget.gov.ru/epbs/registry/7710568760-BUDGETS/data?
# имя ключа, по которому находятся данные в ответе на get-запрос:
data_key=data
# заголовки (при необходимости):
headers={}
# параметры для get-запроса на получения данных:
params={"filterstatus": "ACTIVE"}

# параметры пользовательского api
[cli_api_params]
# url-адрес целевого сервера пользователя:
base_url=http://127.0.0.1:8090/budget
# заголовки (при необходимости):
headers={}
# параметры, по которым выбирается объект для обновления данных в БД 
# пользователя (это имена полей модели, заданной в model)
edit_instance_by_fields=code, name, budgettype